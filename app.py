import asyncio
import uuid
from datetime import datetime

import streamlit as st

from graph.compile_graph import graph
from prompts.prompt_manager import prompt_manager
from ui.ui_components import (check_file_uploads, create_criteria_section,
                              create_download_section, create_options_section,
                              create_project_upload_section,
                              create_results_section,
                              create_user_feedback_form)
from utils.file_handler import extract_text_from_file
from utils.file_utils import delete_files, save_uploaded_files
from utils.results_handler import handle_check_results, prepare_results_json
from utils.s3_utils import S3Handler, prepare_s3_files, save_to_s3


def main():
    st.title("ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫—É—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞")

    tab1, tab2 = st.tabs(["üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤", "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏"])

    # –û—Å–Ω–æ–≤–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
    with tab1:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        with open("–ö—Ä–∏—Ç–µ—Ä–∏–∏.txt", "r", encoding="utf-8") as f:
            default_criteria = f.read()

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        passport_file, report_file = create_project_upload_section()
        custom_criteria, new_criteria_file = create_criteria_section(default_criteria)
        skip_feedback, llm_choice = create_options_section()

        st.session_state["llm_choice"] = llm_choice

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–æ–≤
        consent = st.checkbox("–Ø —Å–æ–≥–ª–∞—Å–µ–Ω –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ —Å–µ—Ä–≤–∏—Å–∞.", key="consent_checkbox")
        
        start_check = st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—á–µ—Ç", disabled=not consent)

        if start_check:
            # –û—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            keys_to_keep = ["llm_choice"]
            for key in list(st.session_state.keys()):
                if key not in keys_to_keep:
                    del st.session_state[key]

            if report_file:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –≤—ã–≤–æ–¥–∏–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ,
                # –µ—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
                check_file_uploads(passport_file, new_criteria_file)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                files_to_save = {
                    "passport": passport_file,
                    "report": report_file,
                    "criteria": new_criteria_file if new_criteria_file else None,
                }
                st.session_state.files_to_save = files_to_save
                saved_files = save_uploaded_files(files_to_save)

                # –§–æ—Ä–º–∏—Ä—É–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≥—Ä–∞—Ñ–∞
                inputs = {
                    "passport": (
                        extract_text_from_file(saved_files.get("passport", ""))
                        if passport_file
                        else ""
                    ),
                    "report": (
                        extract_text_from_file(saved_files.get("report", ""))
                    ),
                    "criteria": (
                        extract_text_from_file(saved_files.get("criteria", ""))
                        if new_criteria_file
                        else default_criteria
                    ),
                    "skip_feedback": skip_feedback,
                }

                try:
                    # –ó–∞–ø—É—Å–∫–∞–µ–º –≥—Ä–∞—Ñ
                    config = {"configurable": {"thread_id": str(uuid.uuid4())}}
                    graph.invoke(inputs, config=config)
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
                    handle_check_results(config, graph, custom_criteria, skip_feedback)
                    st.session_state.report_file_name = report_file.name.split(".")[0]
                    st.session_state.current_time = datetime.now().strftime(
                        "%Y%m%d_%H%M%S"
                    )

                except Exception as e:
                    st.error(
                        "–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                        icon="üòû",
                    )
                    st.exception(e)
                finally:
                    # –£–¥–∞–ª—è–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                    delete_files(list(saved_files.values()))
            else:
                st.error(
                    "‚ö†Ô∏è –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É."
                )

    # –í–∫–ª–∞–¥–∫–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞–º–∏
    with tab2:
        prompt_manager.render_prompt_editor()

    # –°–µ–∫—Ü–∏—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if "check_result" in st.session_state:
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ S3
        files_to_s3_save = prepare_s3_files(
            st.session_state.files_to_save,
            st.session_state.check_result,
            st.session_state.check_criteria,
            st.session_state.feedback,
        )

        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ S3
        if "folder_name" not in st.session_state:
            st.session_state.folder_name = (
                f"{st.session_state.current_time}_{uuid.uuid4()}"
            )

        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º JSON –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ S3
        results_json = prepare_results_json(
            st.session_state.files_to_save,
            st.session_state.current_time,
            st.session_state.llm_choice,
            st.session_state.passport_content,
            st.session_state.report_content,
            st.session_state.input_criteria,
            st.session_state.check_result,
            st.session_state.check_criteria,
            st.session_state.feedback,
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ S3
        if not st.session_state.get("s3_save_completed", False):
            if "s3_handler" not in st.session_state:
                st.session_state.s3_handler = S3Handler()

                # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –¥–∞–Ω–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                st.session_state.s3_handler.set_base_path(st.session_state.folder_name)

            with st.spinner("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."):
                asyncio.run(
                    save_to_s3(
                        st.session_state.s3_handler,
                        files_to_s3_save,
                        st.session_state.report_file_name,
                        results_json,
                    )
                )

            # –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ S3 –∑–∞–≤–µ—Ä—à–µ–Ω–æ
            st.session_state.s3_save_completed = True

        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        # –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        with tab1:
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
            create_results_section(
                st.session_state.check_criteria,
                st.session_state.check_result,
                st.session_state.feedback,
            )

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
            # –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
            mark, comment, sent_feedback = create_user_feedback_form()

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å,
            # –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ JSON –≤ S3
            if sent_feedback:
                results_json["feedback_from_user"]["rating"] = mark
                results_json["feedback_from_user"]["comment"] = comment
                with st.spinner("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏..."):
                    asyncio.run(
                        st.session_state.s3_handler.save_results_json_to_s3(
                            results_json
                        )
                    )
                st.success("–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!")

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            file_name_base = (
                f"{st.session_state.llm_choice}_"
                f"{st.session_state.current_time}_"
                f"{st.session_state.report_file_name}"
            )

            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            create_download_section(
                st.session_state.check_result,
                st.session_state.html_content,
                st.session_state.pdf_bytes,
                file_name_base,
            )


if __name__ == "__main__":
    main()
