import uuid
from datetime import datetime

import streamlit as st

from compile_graph import graph
from file_handler import extract_text_from_file
from file_utils import (convert_markdown_to_html, convert_markdown_to_pdf,
                        delete_files, save_file)
from prompt_manager import prompt_manager
from ui_components import check_file_uploads, get_file_uploader, select_llm


def main():
    st.title("ü§ñ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫—É—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞")

    tab1, tab2 = st.tabs(["–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏"])

    with tab1:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        with open("–ö—Ä–∏—Ç–µ—Ä–∏–∏.txt", "r", encoding="utf-8") as f:
            default_criteria = f.read()

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
        passport_file = get_file_uploader(
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞—Å–ø–æ—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞ (PDF/DOCX)", ["pdf", "docx"]
        )
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
        report_file = get_file_uploader(
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É (PDF/DOCX)", ["pdf", "docx"]
        )

        with st.expander("–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):", icon="üìÑ"):
            st.markdown(default_criteria)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏,
        # –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
        new_criteria_file = (
            get_file_uploader(
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (TXT/PDF/DOCX)", ["txt", "pdf", "docx"]
            )
            if st.toggle("–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤")
            else None
        )

        # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ LLM
        llm_choice = select_llm()
        st.session_state["llm_choice"] = llm_choice

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
        if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—á–µ—Ç"):
            if report_file:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
                check_file_uploads(passport_file, new_criteria_file)

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                files_to_save = {
                    "passport": passport_file,
                    "report": report_file,
                    "criteria": new_criteria_file if new_criteria_file else None,
                }

                saved_files = {}
                for key, file in files_to_save.items():
                    if file:
                        saved_files[key] = save_file(file)

                # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                inputs = {
                    "passport": (
                        extract_text_from_file(saved_files.get("passport", ""))
                        if passport_file
                        else ""
                    ),
                    "report": (
                        extract_text_from_file(saved_files.get("report", ""))
                        if report_file
                        else ""
                    ),
                    "criteria": (
                        extract_text_from_file(saved_files.get("criteria", ""))
                        if new_criteria_file
                        else default_criteria
                    ),
                }

                try:
                    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    config = {"configurable": {"thread_id": str(uuid.uuid4())}}
                    graph.invoke(inputs, config=config)

                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    check_criteria = graph.get_state(config=config).values[
                        "structured_criteria"
                    ]
                    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    check_result = graph.get_state(config=config).values[
                        "check_results"
                    ]

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ session state
                    st.session_state.check_result = check_result
                    st.session_state.check_criteria = check_criteria
                    st.session_state.pdf_bytes = convert_markdown_to_pdf(check_result)
                    st.session_state.html_content = convert_markdown_to_html(
                        check_result
                    )
                    st.session_state.report_file_name = report_file.name.split(".")[0]
                    st.session_state.llm_choice = llm_choice
                    st.session_state.current_time = datetime.now().strftime(
                        "%Y%m%d_%H%M%S"
                    )

                except Exception as e:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ
                    st.error(
                        "–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                        icon="üòû",
                    )
                    st.exception(e)
                finally:
                    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    delete_files(list(saved_files.values()))
            else:
                # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
                st.error("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É.")

    with tab2:
        prompt_manager.render_prompt_editor()

    # –§–æ—Ä–º–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if "check_result" in st.session_state:

        st.header("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏")
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
        with st.expander("–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:", icon="üìÑ"):
            st.markdown(st.session_state.check_criteria)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
        with st.expander("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:", icon="üìÑ"):
            st.markdown(st.session_state.check_result)

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        file_name_base = (f"{st.session_state.llm_choice}_"
                         f"{st.session_state.current_time}_"
                         f"{st.session_state.report_file_name}")
        
        download_file_name_md = f"{file_name_base}_check_results.md"
        download_file_name_pdf = f"{file_name_base}_check_results.pdf"
        download_file_name_html = f"{file_name_base}_check_results.html"

        # –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_format = st.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:",
            ["HTML", "PDF", "Markdown"],
            index=0,
        )

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        if save_format == "HTML":
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (HTML)",
                data=st.session_state.html_content,
                file_name=download_file_name_html,
                mime="text/html",
            )
        elif save_format == "PDF":
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (PDF)",
                data=st.session_state.pdf_bytes,
                file_name=download_file_name_pdf,
                mime="application/pdf",
            )
        else:  # Markdown
            st.download_button(
                label="–°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (Markdown)",
                data=st.session_state.check_result,
                file_name=download_file_name_md,
                mime="text/plain",
            )


if __name__ == "__main__":
    main()
