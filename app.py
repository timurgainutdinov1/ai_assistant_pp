import os
import uuid

import streamlit as st

from compile_graph import graph
from file_handler import extract_text_from_file
from prompt_manager import prompt_manager


def get_file_uploader(label, file_types):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤.

    Args:
        label (str): –ú–µ—Ç–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤.
        file_types (list): –°–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤.

    Returns:
        file: –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª.
    """
    return st.file_uploader(label, type=file_types)


def check_file_uploads(passport, criteria):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –∏ –≤—ã–≤–æ–¥–∏—Ç –æ–¥–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ,
    –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.

    Args:
        passport (file): –§–∞–π–ª –ø–∞—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞.
        criteria (file): –§–∞–π–ª –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏.
    """
    warnings = []
    if passport is None:
        warnings.append("–ø–∞—Å–ø–æ—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
    if criteria is None:
        warnings.append("–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    if warnings:
        st.warning(f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: {', '.join(warnings)}.")


def save_file(file, name=None):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.

    Args:
        file (file): –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª.
        name (str, optional): –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
                              –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ,
                              –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                              —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.

    Returns:
        str: –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.
    """
    unique_id = str(uuid.uuid4())
    file_name = f"{unique_id}_{name if name else file.name}"
    with open(file_name, "wb") as f:
        f.write(file.getbuffer())
    return file_name


def delete_files(files):
    """
    –£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

    Args:
        files (list): –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.
    """
    for file in files:
        if file:
            os.remove(file)


def select_llm():
    """
    –í—ã–±–æ—Ä LLM.

    Returns:
        str: –í—ã–±—Ä–∞–Ω–Ω–∞—è LLM.
    """
    return st.selectbox(
        "–í—ã–±–µ—Ä–∏—Ç–µ LLM:", [
            "DeepSeek R1",
            "DeepSeek Chat",
            "Gemini 2.0 Pro",
            "Gemma 3 27B",
            "Gemini 2.0 Flash",
            "Llama 3.3 70B Instruct",
            "Qwen 32B",
            "Qwen 2.5 72B",
            "Mistral Small 24B"
        ]
    )


def main():
    st.title("AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫—É—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫—É–º–∞")

    # Add tabs for main functionality and prompt management
    tab1, tab2 = st.tabs(["–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏"])

    with tab1:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        with open("–ö—Ä–∏—Ç–µ—Ä–∏–∏.txt", "r", encoding="utf-8") as f:
            default_criteria = f.read()

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞ –ø—Ä–æ–µ–∫—Ç–∞
        passport_file = get_file_uploader(
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–∞—Å–ø–æ—Ä—Ç –ø—Ä–æ–µ–∫—Ç–∞ (PDF/DOCX)", ["pdf", "docx"]
        )
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É
        report_file = get_file_uploader(
            "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É (PDF/DOCX)", ["pdf", "docx"]
        )

        with st.expander("–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é):", icon="üìÑ"):
            st.markdown(default_criteria)

        # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏,
        # –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å
        new_criteria_file = (
            get_file_uploader(
                "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (TXT/PDF/DOCX)",
                ["txt", "pdf", "docx"]
            )
            if st.toggle("–ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤")
            else None
        )

        # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ LLM
        llm_choice = select_llm()
        st.session_state["llm_choice"] = llm_choice

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç—É –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏
        if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç—á–µ—Ç"):
            if report_file:
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤
                check_file_uploads(passport_file, new_criteria_file)

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                files_to_save = {
                    "passport": passport_file,
                    "report": report_file,
                    "criteria": new_criteria_file if new_criteria_file else None,
                }

                saved_files = {}
                for key, file in files_to_save.items():
                    if file:
                        saved_files[key] = save_file(file)

                # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
                inputs = {
                    "passport": (
                        extract_text_from_file(saved_files.get("passport", ""))
                        if passport_file
                        else ""
                    ),
                    "report": (
                        extract_text_from_file(saved_files.get("report", ""))
                        if report_file
                        else ""
                    ),
                    "criteria": (
                        extract_text_from_file(saved_files.get("criteria", ""))
                        if new_criteria_file
                        else default_criteria
                    ),
                }

                try:
                    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫ –≥—Ä–∞—Ñ–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    config = {"configurable": {"thread_id": str(uuid.uuid4())}}
                    graph.invoke(inputs, config=config)

                    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    check_criteria = graph.get_state(config=config).values[
                        "structured_criteria"
                    ]
                    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    check_result = graph.get_state(config=config).values[
                        "check_results"
                    ]

                    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    with st.expander("–ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:", icon="üìÑ"):
                        st.markdown(check_criteria)

                    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–∫–∏
                    with st.expander("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:", icon="üìÑ"):
                        st.markdown(check_result)
                except Exception as e:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ
                    st.error(
                        "–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.",
                        icon="üòû",
                    )
                    st.exception(e)
                finally:
                    # –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    delete_files(saved_files.values())
            else:
                # –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω
                st.error("–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É.")

    with tab2:
        prompt_manager.render_prompt_editor()


if __name__ == "__main__":
    main()
